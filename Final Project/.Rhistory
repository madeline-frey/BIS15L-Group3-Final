knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
turtles
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
turtles
view(turtles)
turtles%>%
naniar::miss_var_summary()
turtles%>%
group_by(year)%>%
tabyl(Species)
turtles%>%
tabyl(Species)
turtles%>%
group_by(year)%>%
summarise(across(SCL_tip,SCL_notch,CCL_tip,CCL_notch,Circumference,Girth)mean,na.rm=T))
turtles%>%
tabyl(Species)
turtles%>%
group_by(year)%>%
summarise(across(SCL_tip,SCL_notch,CCL_tip,CCL_notch,Circumference,Girth,mean,na.rm=T))
turtles%>%
tabyl(Species)
turtles%>%
group_by(year)%>%
summarise(across(SCL_tip,SCL_notch,CCL_tip,CCL_notch,Circumference,Girth,mean,na.rm=T))
turtles%>%
tabyl(Species)
turtles%>%
group_by(year)%>%
summarise(across(SCL_tip,SCL_notch,CCL_tip,CCL_notch),mean,na.rm=T)
turtles%>%
tabyl(Species)
turtles%>%
summarise(across(SCL_tip,SCL_notch,CCL_tip,CCL_notch),mean,na.rm=T)
turtles%>%
tabyl(Species)
turtles%>%
summarise(across(contains("CL")),mean,na.rm=T)
turtles%>%
summarise(across(contains("CL"),mean,na.rm=T))
turtles%>%
group_by(year)%>%
summarise(across(contains("CL"),mean,na.rm=T))
turtles%>%
group_by(Species)%>%
summarise(across(contains("CL"),mean,na.rm=T))
turtles%>%
filter(species=="")
turtles%>%
filter(species==" ")
turtles%>%
filter(species=="UN")
turtles%>%
filter(Species=="UN")
turtles%>%
filter(Species=="")
turtles%>%
group_by(year,Dead_Alive)
turtles%>%
group_by(year)%>%
count(Dead_Alive)
turtles%>%
group_by(year)%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")
turtles%>%
filter(Dead_Alive=="")
turtles_tidy<-turtles%>%
mutate_all(tolower)
turtles_tidy
turtles_tidy%>%
group_by(year)%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")
turtles_tidy%>%
group_by(year)%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")+
coord_flip()+
labs(title = "Number of Dead and Live Captures per Year",x="year",y="Number of Dead or Live Captures")+
theme(axis.title.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(year)%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")+
labs(title = "Number of Dead and Live Captures per Year",x="year",y="Number of Dead or Live Captures")+
theme(axis.title.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(year)%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")+
labs(title = "Number of Dead and Live Captures per Year",x="year",y="Number of Dead or Live Captures")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(year)%>%
filter(Dead_Alive!="")%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")+
labs(title = "Number of Dead and Live Captures per Year",x="year",y="Number of Dead or Live Captures")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
ggplot(aes(x=SCL_tip,y=CCL_tip,color=Species))+
geom_point()+
labs(title = "Measurements by Species",x="SCL length",y="CCL Length")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
summarise(mean_SCL=mean(SCL_tip),
mean_CCL=mean(CCL_tip),na.rm=T)
ggplot(aes(x=mean_SCL,y=mean_CCL,color=Species))+
geom_point()+
labs(title = "Measurements by Species",x="SCL length",y="CCL Length")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
summarise(mean_SCL=mean(SCL_tip,na.rm=T),
mean_CCL=mean(CCL_tip,na.rm=T))
ggplot(aes(x=mean_SCL,y=mean_CCL,color=Species))+
geom_point()+
labs(title = "Measurements by Species",x="SCL length",y="CCL Length")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
summarise(mean_SCL=mean(SCL_tip),
mean_CCL=mean(CCL_tip))
ggplot(aes(x=mean_SCL,y=mean_CCL,color=Species))+
geom_point()+
labs(title = "Measurements by Species",x="SCL length",y="CCL Length")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
summarise(mean_SCL=mean(SCL_tip),
mean_CCL=mean(CCL_tip))%>%
ggplot(aes(x=mean_SCL,y=mean_CCL,color=Species))+
geom_point()+
labs(title = "Measurements by Species",x="SCL length",y="CCL Length")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
summarise(mean_SCL=mean(SCL_tip,na.rm=T),
mean_CCL=mean(CCL_tip,na.rm=T))%>%
ggplot(aes(x=mean_SCL,y=mean_CCL,color=Species))+
geom_point()+
labs(title = "Measurements by Species",x="SCL length",y="CCL Length")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy%>%
group_by(Species)%>%
summarise(mean_SCL=mean(SCL_tip,na.rm=T),
mean_CCL=mean(CCL_tip,na.rm=T))
turtles_tidy%>%
summarise(mean_SCL=mean(SCL_tip,na.rm=T),
mean_CCL=mean(CCL_tip,na.rm=T))
turtles_tidy
turtles_tidy%>%
summarise(mean_SCL_tip=mean(SCL_tip,na.rm=T))
turtles%>%
summarise(mean_SCL_tip=mean(SCL_tip,na.rm=T))
turtles%>%
group_by(Species)%>%
summarise(mean_SCL_tip=mean(SCL_tip,na.rm=T))
turtles%>%
arrange(desc(SCL_tip))
turtles%>%
tabyl(Species,Gear)
turtles%>%
tabyl(Gear,Species)
turtles%>%
filter(Gear=="")%>%
tabyl(Gear,Species)
turtles%>%
filter(Gear!="")%>%
tabyl(Gear,Species)
turtles%>%
filter(Gear!=""&Species!="")%>%
ggplot(aes(x=Gear,fill=Species))+
geom_bar(position = "dodge")+
labs(title = "Gear used for Different Spcies",x="Gear",y="Number Captured with Given Method")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
#turtles
#view(turtles)
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
#turtles
#view(turtles)
turtles_tidy<-turtles%>%
mutate_all(tolower)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
library(ggmap)
library(rgeos)
library(rgdal)
library(devtools)
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
turtles_tidy<-turtles%>%
na_if("")%>%
na_if("0")%>%
na_if("0.0")%>%
mutate(dead_alive_new=if_else(Dead_Alive=="alive","Alive",Dead_Alive))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
library(ggmap)
library(rgeos)
library(rgdal)
library(devtools)
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
turtles_tidy<-turtles%>%
na_if("")%>%
na_if("0")%>%
na_if("0.0")%>%
mutate(dead_alive_new=if_else(Dead_Alive=="alive","Alive",Dead_Alive))
library(lubridate)
turtles3<-turtles_tidy%>%
mutate(DateCapture_new=dmy(DateCapture))%>%
filter(!is.na(DateCapture_new))%>%
mutate(Capture_month=month(DateCapture_new))%>%
mutate(Capture_day=day(DateCapture_new))%>%
mutate(capture_week_day=wday(DateCapture_new))
turtles3<-clean_names(turtles3)
head(turtles3)
view(turtles3)
turtles3%>%
select(cap_latitude,cap_longitude)%>%
summary()
cap_lat <- c(33.49, 38.41)
cap_long <- c(-79.08, -75.47)
bbox <- make_bbox(cap_long, cap_lat, f = 0.1)
cap_map_base <- get_map(bbox, maptype = "terrain-background", source = "stamen")
ggmap(cap_map_base)
ggmap(cap_map_base) +
geom_point(data = turtles3, aes(cap_longitude,cap_latitude,color=species,shape=dead_alive_new), size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Capture Locations")
turtles3%>%
select(rel_latitude,rel_longitude)%>%
summary()
rel_lat <- c(27.82, 39)
rel_long <- c(-81.24, -36.03)
bbox2 <- make_bbox(rel_long, rel_lat, f = 0.05)
rel_map_base <- get_map(bbox2, maptype = "terrain-background", source = "stamen")
ggmap(rel_map_base)
ggmap(rel_map_base) +
geom_point(data = turtles3, aes(rel_longitude,rel_latitude,color=species), size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Release Locations")
turtles3%>%
group_by(year)%>%
summarise(n())
turtles3%>%
group_by(year)%>%
ggplot(aes(x=year,fill=dead_alive_new))+
geom_bar(position = "dodge")
turtles3%>%
group_by(capture_month)%>%
summarise(n())
turtles3%>%
ggplot(aes(month(x=date_capture_new,label=TRUE)))+
geom_bar(position = "dodge")+
labs(x = NULL,
y = "Number of Captures")
turtles3%>%
group_by(capture_day)%>%
summarise(n())
turtles3%>%
ggplot(aes(day(x=date_capture_new)))+
geom_density(fill="green")+
labs(x = NULL,
y = "Number of Captures")
turtles3%>%
group_by(capture_week_day)%>%
summarise(n())
turtles3%>%
ggplot(aes(wday(x=date_capture_new,label=TRUE)))+
geom_bar()+
labs(x = NULL,
y = "Number of Captures")
turtles3%>%
group_by(year)%>%
mutate(mean_body_length=mean(scl_tip,na.rm=T))%>%
ggplot(aes(x=year,y=mean_body_length,group=1,color=species))+
geom_line()+
geom_point()+
facet_wrap(~species)
turtles3%>%
ggplot(aes(x=species,y=ccl_tip,color=species))+
geom_boxplot()
turtles3%>%
filter(gear!=""&species!="")%>%
ggplot(aes(x=gear,fill=species))+
geom_bar(position = "dodge")+
labs(title = "Gear used for Different Species",x="Gear",y="Number Captured with Given Method")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))+
scale_y_log10()
names(turtles3)
library(shinydashboard)
turtles3$year<-as.character(turtles3$year)
ui <- dashboardPage(skin="green",
dashboardHeader(title = "Turtle Captures"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("species", "Select Species:",
choices=unique(turtles3$species)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Catch Details", choices = c("research_type","dead_alive_new", "body_area_pit","body_area","record_type","cap_region","rel_region"),
selected = "record_type"),
hr(),
helpText("Source: (https://www.fisheries.noaa.gov/inport/item/35875). Capture efforts were conducted to evaluate the growth rates, sex ratios, size distribution, species composition, genetic composition, relative survival rates and foraging ecology of sea turtle populations in NC.")
),
box(title = "Turtle Information", width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
turtles3 %>%
filter(species == input$species) %>%
ggplot(aes_string(x ="year",fill = input$x)) +
geom_bar(position = "dodge")+
scale_fill_brewer(palette = "Set1")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Turtle Catch Characterisitics",x=NULL,y="Number of Turtles")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
names(turtles3)
glimpse(turtles3)
ui <- dashboardPage(
dashboardHeader(title = "Turtle Measurements"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
selectInput("y", "Select Y Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(turtles3, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Turtle Measurements"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
selectInput("y", "Select Y Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(turtles3, aes_string(x = input$x, y = input$y)) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Turtle Measurements"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
selectInput("y", "Select Y Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(turtles3, aes_string(x = input$x, y = input$y)) + geom_point(alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Turtle Measurements"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
selectInput("y", "Select Y Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(turtles3, aes_string(x = input$x, y = input$y)) + geom_point(alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Turtle Measurements"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
selectInput("y", "Select Y Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(turtles3, aes_string(x = input$x, y = input$y)) + geom_point(alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Turtle Measurements"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("cap_latitude", "cap_longitude"), selected = "scl_notch"),
selectInput("y", "Select Y Variable", choices = c("scl_notch ", "scl_tip", "scw", "ccl_notch", "ccl_tip", "ccw", "circumference", "tail", "girth", "depth_mid", "weight"), selected = "scl_notch"),
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(turtles3, aes_string(x = input$x, y = input$y)) + geom_point(alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
turtles3 %>%
mutate(mass_category = case_when(weight <= 30 ~ "small", weight >= 30 ~ "large")) %>%
group_by(year) %>%
ggplot(aes(x = year, fill = mass_category))+
geom_bar()+
labs(title = "Turtle Capture by Weight Class",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
